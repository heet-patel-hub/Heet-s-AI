pip install flask google-auth google-auth-oauthlib google-auth-httplib2 google-api-python-client openai
import os
from flask import Flask, request, jsonify
from googleapiclient.discovery import build
import openai

app = Flask(__name__)

# Set your OpenAI API key
openai.api_key = "your_openai_api_key_here"

# Google Custom Search API settings
GOOGLE_API_KEY = "your_google_api_key_here"
GOOGLE_SEARCH_ENGINE_ID = "your_search_engine_id_here"

def google_search(query, num_results=5):
    """Search Google using the Custom Search API."""
    service = build("customsearch", "v1", developerKey=GOOGLE_API_KEY)
    results = service.cse().list(q=query, cx=GOOGLE_SEARCH_ENGINE_ID, num=num_results).execute()
    return results.get('items', [])

@app.route('/ask', methods=['POST'])
def ask():
    """Handles questions by searching Google and using GPT for processing."""
    data = request.json
    question = data.get('question')

    if not question:
        return jsonify({'error': 'No question provided.'}), 400

    try:
        # Search Google for the question
        google_results = google_search(question)

        # Format the results for GPT
        search_summary = "\n".join(
            [f"{i+1}. {item['title']}: {item['link']}" for i, item in enumerate(google_results)]
        )

        # Use GPT to process and summarize the results
        gpt_prompt = f"The user asked: {question}\n\nHere are the top Google results:\n{search_summary}\n\nProvide a concise, user-friendly answer based on this information:"
        gpt_response = openai.Completion.create(
            engine="text-davinci-003",
            prompt=gpt_prompt,
            max_tokens=200
        )

        answer = gpt_response['choices'][0]['text'].strip()
        return jsonify({'question': question, 'answer': answer, 'google_results': search_summary}), 200

    except Exception as e:
        return jsonify({'error': str(e)}), 500

if __name__ == '__main__':
    app.run(debug=True)
python app.py

